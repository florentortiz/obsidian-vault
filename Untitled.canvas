{
	"nodes":[
		{"id":"03968788807e58d3","x":-820,"y":-880,"width":1600,"height":780,"type":"text","text":"```dataviewjs\nconst journalPath = '\"01 - Personal/Daily\"'; // Chemin vers tes notes\nconst chartColor = '#4287f5'; // Couleur du graphique\n\nconst startDate = moment(\"2024-01-01\"); // Début de l'année\nconst endDate = moment(\"2024-12-31\"); // Fin de l'année\nvar labels = [];\nvar sleepData = [];\n\n// Générer la liste des jours de l'année\nwhile (startDate.isSameOrBefore(endDate)) {\n    labels.push(startDate.format(\"YYYY-MM-DD\")); // Ajoute chaque date comme label\n    startDate.add(1, 'day'); // Passe au jour suivant\n}\n\n// Récupérer les notes et extraire la métrique \"Sleep\"\nvar dailyNotes = dv.pages(journalPath);\nlabels.forEach(date => {\n    let note = dailyNotes.find(n => n.file.name === date); // Trouve la note par nom de fichier\n    if (note && note.Sleep) {\n        sleepData.push(note.Sleep); // Ajoute la valeur de \"Sleep\" si elle existe\n    } else {\n        sleepData.push(0); // Ajoute 0 si la note ou la métrique est absente\n    }\n});\n\n// Configuration du graphique\nconst sleepChart = {\n    type: 'line',\n    data: {\n        labels: labels,\n        datasets: [{\n            label: 'Sleep Score',\n            data: sleepData,\n            backgroundColor: [chartColor],\n            borderColor: [chartColor],\n            borderWidth: 2\n        }]\n    },\n    options: {\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 10\n            }\n        }\n    }\n};\n\n// Rend le graphique dans le container\nwindow.renderChart(sleepChart, this.container);\n\n```"}
	],
	"edges":[]
}